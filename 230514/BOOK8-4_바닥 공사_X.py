# 가로의 길이가 N, 세로의 길이가 2인 직사각형의 바닥이 있다.
# 이를 1 x 2, 2 x 1, 2 x 2의 덮개를 이용해 채우고자 한다.
# 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오.

# 첫째 줄에 N이 주어진다. (1 <= N <= 1000)
# 첫째 줄에 2 x N 크기의 바닥을 채우는 방법의 수를 796,796으로 나눈 나머지를 출력한다.

import sys
n = int(sys.stdin.readline())

# 풀이
# 세로가 2이므로, 1 x 2 덮개를 쓰면 반드시 두 개를 써야 함

dp = [0] * n

dp[0] = 1 # 세로 2, 가로 1이면 한 가지
dp[1] = 3 # 세로 2, 가로 2면 세 가지
# dp[2]는 가로 2개를 이미 채우고 하나를 더 채우거나(1가지), 가로 1개를 이미 채우고 2개를 더 채우는 경우(2가지)
# dp[3]은 가로 3개를 이미 채우고 하나를 더 채우거나(1가지), 가로 2개를 이미 채우고 2개를 더 채우는 경우(2가지)
# ...
for i in range(2, n):
    dp[i] = (dp[i-1] + dp[i-2] * 2) % 796796

print(dp[n-1])