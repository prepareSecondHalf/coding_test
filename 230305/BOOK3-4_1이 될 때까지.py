# 어떤 수 N이 1이 될 때까지 두 과정 중 하나를 반복적으로 선택하여 수행한다.
# 1. N에서 1을 뺀다.
# 2. N이 K로 나누어떨어지면 N을 K로 나눈다.
# 위 규칙에 따라 N과 K가 주어질 떄, 1될 떄까지 수행해야 하는 최소 연산 횟수를 구하시오
# 첫 번째 줄에 N(2<=N<=100000), K(2<=N<=100000)가 공백으로 구분되어 주어진다. N>K
# 첫째 줄에 N이 1이 될 떄까지 수행해야 하는 연산의 최소 횟수를 출력한다.

import sys
n, k = map(int, sys.stdin.readline().split())
times = 0
while n != 1:
    times += 1
    if n % k == 0:
        n /= k
    else:
        n -= 1
    print('how many times? ', times, 'n: ', n)
print(times)


# 탐욕법 자체에 대한 질문: 그때그때 최선인 것처럼 보이는 걸 뽑는다. (최적의 해보다는 가장 효율적인 것을 추구) 라고는 하는데...
# 한 카테고리로 묶이는 것 같지가 않다. 그냥 최적의 해가 있는 문제를 대충 내놓고 탐욕법입니다... 라고 하는 느낌
# 그래서 막상 체육복같은 문제가 나오면 탐욕법이 안 떠오른다.